# yamllint disable rule:line-length
---
name: Slack Notifications
on:
  workflow_call:
    inputs:
      slackChannel:
        type: string
        description: Channel to post notifications
        default: build
        required: true

jobs:
 slack-notifications:
  runs-on: ubuntu-latest
  name: ${{ github.event.check_run.name }} Slack Notification
  environment: slack
  permissions:
   id-token: write  # to authenticate via OIDC
  if: >-
      contains(fromJSON('["cirrus-ci", "sonarqube-next", "sonarcloud", "azure-pipelines"]'), github.event.check_run.app.slug)
      && ( contains(fromJSON('["main", "master"]'), github.event.check_run.check_suite.head_branch) || startsWith(github.event.check_run.check_suite.head_branch, 'dogfood-') || startsWith(github.event.check_run.check_suite.head_branch, 'branch-') )
      && github.event.check_run.conclusion != 'success'
      && github.event.check_run.conclusion != 'cancelled'
      && github.event.check_run.conclusion != 'skipped'
      && github.event.check_run.conclusion != 'neutral'
  steps:
   - name: Extract and format username
     id: extract
     uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
     with:
          script: |
            const actor = '${{ github.actor }}';
            const regex = /(\w+)-(\w+)-(\w+)/;
            const matches = actor.match(regex);
            if (matches) {
              const formattedUsername = `@${matches[1]} ${matches[2]}`;
              return { formattedUsername };
            } else {
              return { formattedUsername: '' };
            }
   - name: Vault Secrets
     id: secrets
     uses: SonarSource/vault-action-wrapper@3996073b47b49ac5c58c750d27ab4edf469401c8 # 3.0.1
     with:
      secrets: |
       development/kv/data/slack webhook | slack_webhook;
   - name: Send Slack notification
     uses: slackapi/slack-github-action@37ebaef184d7626c5f204ab8d3baff4262dd30f0 # v1.27.0
     env:
      SLACK_WEBHOOK_URL: ${{ fromJSON(steps.secrets.outputs.vault).slack_webhook }}
      SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
     with:
      payload: |
        {
           "channel":"${{ inputs.slackChannel }}",
           "attachments":[
              {
                 "color":"#ee0000",
                 "blocks":[
                    {
                       "type":"section",
                       "text":{
                          "type":"mrkdwn",
                          "text":"*${{ github.event.check_run.app.name }}* - <${{ github.event.check_run.details_url }}|${{ github.event.check_run.name }}> ${{ github.event.check_run.conclusion }}  in *${{ github.repository }}*"
                       }
                    },
                    {
                       "type":"section",
                       "text":{
                          "type":"mrkdwn",
                          "text":"Branch: *${{ github.event.check_run.check_suite.head_branch }}*\nCommit: *${{ github.event.check_run.head_sha }}*\nActor: <@${{ steps.extract.outputs.formattedUsername }}>"
                       }
                    },
                    {
                       "type": "context",
                       "elements": [
                          {
                            "type": "image",
                            "image_url": "${{ github.event.check_run.app.owner.avatar_url }}",
                            "alt_text": "Icon"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "<${{ github.event.check_run.details_url }}|View more details>"
                          }
                       ]
                    }
                 ]
              }
           ]
        }
